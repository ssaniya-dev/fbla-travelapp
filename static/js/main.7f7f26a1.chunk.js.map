{"version":3,"sources":["components/navbar/styles.js","components/navbar/navbar.jsx","components/list/styles.js","components/list/list.jsx","components/details/styles.js","components/details/details.jsx","api_src/index.js","App.js","index.js"],"names":["makeStyles","title","display","inputRoot","color","toolbar","justifyContent","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Navbar","classes","useStyles","React","useState","open","setOpen","AppBar","background","Toolbar","className","Typography","variant","Button","type","onClick","Modal","onClose","Box","sx","id","component","mt","formControl","margin","minWidth","marginBottom","container","padding","list","height","overflow","List","available","award","setAward","setAvailable","setType","setRating","rating","price","setPrice","FormControl","InputLabel","Select","value","onChange","e","target","MenuItem","loading","alignItems","cusine","subtitle","marginTop","spacing","Details","places","selected","refProp","current","scrollIntoView","behavior","block","console","log","Grid","map","place","i","item","xs","Card","elevation","backgroundColor","CardMedia","image","photo","images","large","url","name","CardContent","gutterBottom","my","Rating","Number","readOnly","num_reviews","cuisine","Chip","size","label","address","phone","CardActions","window","website","getPlacesData","a","axios","get","params","location_id","headers","data","App","filteredPlaces","setFilteredPlaces","setPlaces","useEffect","then","filter","length","filtPlace","String","is_closed","awards","price_level","CssBaseline","md","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f7f26a1.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  title: {\n    display: 'block',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  toolbar: {\n    display: 'flex', justifyContent: 'space-between',\n  },\n}));","import {AppBar, Toolbar, Modal, Box, Typography, Button} from '@material-ui/core'\nimport React from 'react'\nimport useStyles from './styles';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: '#3a3153',\n    border: '2px solid #000',\n    color: 'white',\n    boxShadow: 24,\n    p: 4,\n  };\nconst Navbar = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return(\n        <AppBar position = \"static\" style={{ background: '#3a3153' }}>\n            <Toolbar className = {classes.toolbar}>\n                <Typography variant =\"h5\" className = {classes.title}>\n                    TravelHaven\n                </Typography>\n                <Button variant=\"contained\" type=\"button\" onClick={handleOpen}>\n                    Help\n                </Button>\n                <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style}>\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        What is the purpose of this application?\n                        </Typography>\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        To help users find a tourist location based on a set of criteria! \n                        </Typography>\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        How do I use this application? \n                        </Typography>\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        You can choose between restaurants or attractions on the left menu. From there, you can specify what types of attractions/restaurants you want to see based on price point, rating, awards, and more! All the available attractions are listed on the right of your screen. \n                        </Typography>\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        How many attractions are there in this application? \n                        </Typography>\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        There are in total 55 attracions near my area. However, this will greatly vary should you choose to change the area of interest. \n                        </Typography>\n                    </Box>\n                </Modal>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  formControl: {\n    margin: \"10px\", minWidth: 120, marginBottom: '30px',\n  },\n  container: {\n    padding: '25px',\n  },\n  marginBottom: {\n    marginBottom: '30px',\n  },\n  list: {\n    height: '75vh', overflow: 'auto',\n  },\n}));","import React from 'react'\nimport { Typography, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core'\nimport useStyles from './styles'\n//holds all the variables that will be used to filter the list\nconst List = ({available, award, setAward, setAvailable, setType, type, setRating, rating, price, setPrice}) => {\n    const classes = useStyles()\n    return(\n        <div className = {classes.container}>\n            <Typography variant = \"h4\">Filter:</Typography>\n            <FormControl className={classes.formControl}>\n                <InputLabel id = \"type\">Type</InputLabel>\n                {/* Extracts what location type the user wants the list to be filtered by. */}\n                <Select value={type} onChange = {(e)=> setType(e.target.value)}>\n                    <MenuItem value = \"attractions\">Attractions</MenuItem>\n                    <MenuItem value = \"restaurants\">Restaurants</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Price</InputLabel>\n                {/* Extracts what price the user wants the list to be filtered by. */}\n                <Select id = \"price\" value = {price} onChange = {(e)=> setPrice(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"1\">Cheap</MenuItem>\n                    <MenuItem value = \"2\">Expensive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Availability</InputLabel>\n                {/* Extracts the availability the user wants the list to be filtered by. */}\n                <Select id = \"available\" value = {available} onChange = {(e)=> setAvailable(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"false\">Open</MenuItem>\n                    <MenuItem value = \"true\">Closed</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Awards</InputLabel>\n                {/* Extracts the # of awards the user wants the list to be filtered by. */}\n                <Select id = \"award\" value = {award} onChange = {(e)=> setAward(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"1\">Awarded</MenuItem>\n                    <MenuItem value = \"5\">Well Awarded</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Rating</InputLabel>\n                {/* Extracts the rating the user wants the list to be filtered by. */}\n                <Select id = \"rating\" value = {rating} onChange = {(e)=> setRating(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"3\">3+ Stars</MenuItem>\n                    <MenuItem value = \"4\">4+ Stars</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    )\n}\n\nexport default List","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  formControl: {\n    margin: \"10px\", minWidth: 120, marginBottom: '30px',\n  },\n  loading: {\n    height: '600px', display: 'flex', justifyContent: 'center', alignItems: 'center',\n  },\n  container: {\n    padding: '25px',\n  },\n  marginBottom: {\n    marginBottom: '30px',\n  },\n  list: {\n    height: '75vh',\n    padding: \"20px\"\n  },\n  cusine: {\n    margin: '5px 5px 5px 0',\n  },\n  subtitle: {\n    display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: '10px',\n  },\n  spacing: {\n    display: 'flex', alignItems: 'center', justifyContent: 'space-between',\n  }\n}));","import React from 'react'\nimport useStyles from './styles.js';\nimport {Grid, Box, Typography, Button, Card, CardMedia, CardContent, CardActions, Chip} from '@material-ui/core'\nimport Rating from '@material-ui/lab/Rating'\nconst Details = ({places, selected, refProp}) => {\n    const classes = useStyles()  \n    if (selected) refProp?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    console.log(places)\n    return(\n    <Grid container spacing={2} className={classes.list}>\n        {places?.map((place, i) => (\n\n            <Grid item key={i} xs={4}>\n            <Card elevation={6} style = {{height: 800, color: \"white\", backgroundColor: '#3a3153'}}>\n                <CardMedia\n                    style={{ height: 350 }}\n                    image={place.photo ? place.photo.images.large.url : 'https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg'}\n                    title={place.name}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\">{place.name ? place.name : \"Coming soon...\"}</Typography>\n                    <Box display=\"flex\" justifyContent=\"space-between\" my={2}>\n                    <Rating name=\"read-only\" value={Number(place.rating)} readOnly />\n                    <Typography component=\"legend\">{place.num_reviews ? place.num_reviews : \"No\"} review{place.num_reviews > 1 && 's'}</Typography>\n                    </Box>\n                    {place?.cuisine?.map(({ name }) => (\n                    <Chip key={name} size=\"small\" label={name} className={classes.cusine} />\n                    ))}\n                    {place.address && (\n                    <Typography gutterBottom variant=\"body2\" color=\"white\" className={classes.subtitle}>\n                        {place.address}\n                    </Typography>\n                    )}\n                    {place.phone && (\n                    <Typography variant=\"body2\" color=\"white\" className={classes.spacing}>\n                        {place.phone}\n                    </Typography>\n                    )}\n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" size=\"small\" color=\"white\" onClick={() => window.open(place.website, '_blank')}>\n                    Website\n                    </Button>\n                </CardActions>\n                </Card>\n            </Grid>\n        ))}\n    </Grid>\n    )\n}\n\nexport default Details","import axios from \"axios\";\n\nexport const getPlacesData = async(type) => {\n\n    try {\n        const {data: {data}} = await axios.get(`https://travel-advisor.p.rapidapi.com/${type}/list`, {\n              params: {\n                location_id: '41131'\n              },\n              headers: {\n                'x-rapidapi-host': 'travel-advisor.p.rapidapi.com',\n                'x-rapidapi-key': 'f92a96c452mshf765c45ffec9e86p13d8c8jsn705c0cb416d7'\n              }\n            })\n\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}","import React, {useState, useEffect} from 'react'; \nimport { CssBaseline, Grid } from '@material-ui/core';\nimport Navbar from './components/navbar/navbar'\nimport List from './components/list/list'\nimport Details from './components/details/details'\nimport {getPlacesData} from './api_src'\nconst App = () => {\n    //These are all the variables that will be populated in list.jsx. It will be used to filter the array of places.\n    const [type, setType] = useState('restaurants');\n    const [rating, setRating] = useState('');\n    const [award, setAward] = useState('');\n    const [price, setPrice] = useState('')\n    const [available, setAvailable] = useState('')\n    const [filteredPlaces, setFilteredPlaces] = useState([]);\n    const[places, setPlaces] = useState([])\n    //Filters through places array and returns the filtered array depending on the type (restaurant or attraction)\n    useEffect(() => {\n        getPlacesData(type)\n            .then((data) => {\n                setPlaces(data.filter((place) => place.name && place.num_reviews > 0));\n                console.log(data)\n                setFilteredPlaces([]);\n                setPlaces(data)\n            })\n    }, [type])\n    // Check the length of filteredPlaces b/c to save the user steps, we need to filter from the filteredPlaces array\n    // instead of the regular places array. If the filteredPlaces array is empty, we filter through the original places \n    // array and set it to filteredPlaces\n\n    //Filters through the places array and returns the filtered array with the given rating. \n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            console.log('hi')\n            const filtPlace= places.filter((place) => place.rating >= rating) \n            setFilteredPlaces(filtPlace)\n        } else {\n            const filtPlace = filteredPlaces.filter((place) => place.rating >= rating) \n            setFilteredPlaces(filtPlace)\n        }\n        // const filteredPlaces = places.filter((place) => Number(place.rating) > rating)\n        // setFilteredPlaces(filteredPlaces)\n    }, [rating])\n    //Filters through the places array and returns the filtered array with the given availability. \n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            const filtPlace= places.filter((place) => String(place.is_closed) == available) \n            setFilteredPlaces(filtPlace)\n        } else {\n            const filtPlace = filteredPlaces.filter((place) => String(place.is_closed) == available) \n            setFilteredPlaces(filtPlace)\n        }\n    }, [available])\n    //Filters through the places array and returns the filtered array considering the given award\n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            const filtPlace = places.filter((place) => place?.awards?.length > award) \n            setFilteredPlaces(filtPlace)\n        } else {\n            const filtPlace = filteredPlaces.filter((place) => place?.awards?.length > award) \n            setFilteredPlaces(filtPlace)\n        }\n        // const filteredPlaces = places.filter((place) => place?.awards?.length > award)\n        // setFilteredPlaces(filteredPlaces)\n    }, [award])\n    //Filters through the places array and returns the filtered array considering the given price\n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            if (price == \"1\") {\n                const filtPlace = places.filter((place) => (place.price_level == \"$\" || place.price_level == \"$$ - $$$\"))\n                setFilteredPlaces(filtPlace)\n            } else if (price == \"2\") { \n                const filtPlace = places.filter((place) => (place.price_level == \"$$$$\" || place.price_level == \"$$$$$\"))\n                setFilteredPlaces(filtPlace)\n            } else {\n                setFilteredPlaces(places)\n            }\n        } else {\n            if (price == \"1\") {\n                const filtPlace = filteredPlaces.filter((place) => (place.price_level == \"$\" || place.price_level == \"$$ - $$$\"))\n                setFilteredPlaces(filtPlace)\n            } else if (price == \"2\") { \n                const filtPlace = filteredPlaces.filter((place) => (place.price_level == \"$$$$\" || place.price_level == \"$$$$$\"))\n                setFilteredPlaces(filtPlace)\n            } else {\n                setFilteredPlaces(places)\n            }\n        }\n\n\n    }, [price])\n\n    //This displays all the components of the application\n    return(\n        <div>\n            <CssBaseline/>\n            <Navbar/>\n            <Grid container spacing={3} style={{ width: '100%', color: '#3a3153'}}>\n                <Grid item xs={12} md={4}>\n                    <List \n                        type={type}\n                        places={filteredPlaces.length ? filteredPlaces : places}\n                        setType={setType}\n                        rating = {rating}\n                        setRating = {setRating}\n                        price = {price}\n                        setPrice = {setPrice}\n                        available = {available}\n                        setAvailable = {setAvailable}\n                        award = {award}\n                        setAward = {setAward}\n                    />\n                </Grid>\n                <Grid item xs={12} md={8}>\n                    <Details \n                        places={filteredPlaces.length ? filteredPlaces : places}\n                        type={type}\n                        rating = {rating}\n                        setRating = {setRating}\n                        setType={setType}\n                        price = {price}\n                        setPrice = {setPrice}\n                        available = {available}\n                        setAvailable = {setAvailable}\n                        award = {award}\n                        setAward = {setAward}\n                        />    \n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}